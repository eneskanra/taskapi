version: '3'
services:
    flask:
        build:
            context: app
            dockerfile: Dockerfile
        container_name: flask
        image: digitalocean.com/flask-python:3.6
        restart: unless-stopped
        env_file:
            - "app/.env"
        volumes:
            - ./app:/app
        depends_on:
            - mongodb
        networks:
            - frontend
            - backend
    mongodb:
        image: mongo:4.0.8
        container_name: mongodb
        restart: unless-stopped
        command: mongod --auth
        env_file:
            - "app/.env"
        volumes:
            - mongodbdata:/data/db
        networks:
            - backend
    webserver:
        build:
            context: nginx
            dockerfile: Dockerfile
        image: digitalocean.com/webserver:latest
        container_name: webserver
        restart: unless-stopped
        environment:
            APP_ENV: "prod"
            APP_NAME: "webserver"
            APP_DEBUG: "false"
            SERVICE_NAME: "webserver"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - nginxdata:/var/log/nginx
        depends_on:
            - flask
        networks:
            - frontend
    worker:
        build:
            context: app
            dockerfile: Dockerfile
        container_name: worker
        image: digitalocean.com/flask-python:3.6
        restart: unless-stopped
        env_file:
            - "app/.env"
        command: celery worker -B -l info -A scheduler.tasks
        depends_on:
            - "mongodb"
        restart: unless-stopped
        stop_grace_period: "3s"
        volumes:
            - ./app:/app
        networks:
            - backend
networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    nginxdata:
        driver: local